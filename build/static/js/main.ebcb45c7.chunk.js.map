{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllCharacters","ofset","results","map","getCharacter","res","View","_ref","imgStyle","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","this","setState","render","App","selectedChar","decoration","ReactDOM","createRoot","document","getElementById","React","StrictMode"],"mappings":"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","file":"static/js/main.ebcb45c7.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin:'0 auto'}} src={img} alt='404' />  \r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n\r\n  const {loading, request, error, clearError} = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n  const _apiKey = 'apikey=77a3f609764b8b0566235f32cf7dbdcf'\r\n  const _baseOfSet = 210;\r\n\r\n  const getAllCharacters = async (ofset = _baseOfSet) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${ofset}&${_apiKey}`)\r\n    return res.data.results.map(_transformCharacter)\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const _transformCharacter = (char) => {\r\n\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n\r\n  return {loading, error, getAllCharacters, getCharacter, clearError};\r\n\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'spplication/json'}) => {\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(url, {method, body, headers});\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      setLoading(false);\r\n      return data;\r\n\r\n\r\n    } catch(e) {\r\n      setLoading(false);\r\n      setError(e.message);\r\n      throw e;\r\n    }\r\n\r\n  }, [])\r\n\r\n  const clearError = useCallback(() => setError(null), [])\r\n\r\n  return {loading, request, error, clearError}\r\n\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null);\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList (charList => [...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n\n    const focusOnItem = (id) => {\n        \n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n        \n        const items = renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState } from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar()\n    }, []);\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }                \n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n\r\ncomponentDidCatch() {\r\n  this.setState({\r\n    error: true\r\n  })\r\n}\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n      return this.props.children;\r\n  }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nconst App = () => {\n\n    const [selectedChar, setChar] = useState(null);\n\n\n    const onCharSelected = (id) => {\n        setChar(id);\n    }\n\n    return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                        </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                        <CharList onCharSelected={onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary><CharInfo charId={selectedChar}/></ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM\n  .createRoot(document.getElementById('root'))\n  .render (\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n"],"sourceRoot":""}